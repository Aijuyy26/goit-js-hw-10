{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\nlet timeInterval;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    try {\n      userSelectedDate = selectedDates[0];\n      const timeInterval = userSelectedDate - options.defaultDate;\n\n      if (timeInterval < 1) {\n        iziToast.error({\n          color: 'red',\n          position: 'topRight',\n          message: `Please choose a date in the future`,\n        });\n      } else {\n        startButton.disabled = false;\n        dateTimeInput.disabled = true;\n      }\n    } catch (error) {\n      console.error('An error occurred:', error.message);\n    }\n  },\n};\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst calendar = flatpickr('#datetime-picker', options);\nconst dateTimeInput = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('button');\nconst showTimeElements = document.querySelectorAll('.value');\n\nstartButton.disabled = true;\n\nstartButton.addEventListener('click', event => {\n  clearInterval(countdownInterval);\n\n  countdownInterval = setInterval(() => {\n    const timeRemaining = userSelectedDate - new Date();\n\n    if (timeRemaining < 1) {\n      startButton.disabled = true;\n      dateTimeInput.disabled = false;\n      clearInterval(countdownInterval);\n      return;\n    }\n\n    const timeObject = convertMs(timeRemaining);\n\n    showTimeElements[0].innerText = timeObject.days.toString().padStart(2, '0');\n    showTimeElements[1].innerText = timeObject.hours.toString().padStart(2, '0');\n    showTimeElements[2].innerText = timeObject.minutes.toString().padStart(2, '0');\n    showTimeElements[3].innerText = timeObject.seconds.toString().padStart(2, '0');\n  }, 1000);\n\n  event.preventDefault();\n});"],"names":["userSelectedDate","options","selectedDates","iziToast","startButton","dateTimeInput","error","convertMs","ms","days","hours","minutes","seconds","flatpickr","showTimeElements","event","timeRemaining","timeObject"],"mappings":"2FAMA,IAAIA,EAGJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAI,CACFF,EAAmBE,EAAc,CAAC,EACbF,EAAmBC,EAAQ,YAE7B,EACjBE,EAAS,MAAM,CACb,MAAO,MACP,SAAU,WACV,QAAS,oCACnB,CAAS,GAEDC,EAAY,SAAW,GACvBC,EAAc,SAAW,GAE5B,OAAQC,EAAO,CACd,QAAQ,MAAM,qBAAsBA,EAAM,OAAO,CAClD,CACF,CACH,EAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEiBC,EAAU,mBAAoBZ,CAAO,EACtD,MAAMI,EAAgB,SAAS,cAAc,kBAAkB,EACzDD,EAAc,SAAS,cAAc,QAAQ,EAC7CU,EAAmB,SAAS,iBAAiB,QAAQ,EAE3DV,EAAY,SAAW,GAEvBA,EAAY,iBAAiB,QAASW,GAAS,CAC7C,cAAc,iBAAiB,EAE/B,kBAAoB,YAAY,IAAM,CACpC,MAAMC,EAAgBhB,EAAmB,IAAI,KAE7C,GAAIgB,EAAgB,EAAG,CACrBZ,EAAY,SAAW,GACvBC,EAAc,SAAW,GACzB,cAAc,iBAAiB,EAC/B,MACD,CAED,MAAMY,EAAaV,EAAUS,CAAa,EAE1CF,EAAiB,CAAC,EAAE,UAAYG,EAAW,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC1EH,EAAiB,CAAC,EAAE,UAAYG,EAAW,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC3EH,EAAiB,CAAC,EAAE,UAAYG,EAAW,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC7EH,EAAiB,CAAC,EAAE,UAAYG,EAAW,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CAC9E,EAAE,GAAI,EAEPF,EAAM,eAAc,CACtB,CAAC"}